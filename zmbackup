#!/bin/bash

################################################
# Zimbra backup script for open source edition #
################################################

ZIMBRA_HOME=/opt/zimbra
ZIMBRA_BIN=$ZIMBRA_HOME/bin
ZIMBRA_BACKUP_DIR=$ZIMBRA_HOME/backup 

BACKUP_DATE=`date +%G-%m-%d_%H-%M` 

usage() 
{

    cat << EOF
zmbackup: zmbackup [-o path] -a|-u mailbox
EOF

}

create_backup()
{
    mbox=$1
    $ZIMBRA_BIN/zmmailbox -z -m $mbox getRestURL "//?fmt=tgz" > $ZIMBRA_BACKUP_DIR/$mbox-$BACKUP_DATE.tgz 
} 

create_pack_backup()
{   
    domains=`$ZIMBRA_BIN/zmprov gad`

    for domain in $domains; do
    
        # get all accounts
        accounts=`$ZIMBRA_BIN/zmprov -l gaa $domain`

        # check directory if -o is set
        mkdir -p $ZIMBRA_BACKUP_DIR/$domain

        # fetch account in tgz format
        for account in $accounts; do
            $ZIMBRA_BIN/zmmailbox -z -m $account getRestURL "//?fmt=tgz" > $ZIMBRA_BACKUP_DIR/$domain/$account-$BACKUP_DATE.tgz
        done

        cd $ZIMBRA_BACKUP_DIR/$domain
        tar czf $domain-$BACKUP_DATE.tgz `ls`
        mv $domain-$BACKUP_DATE.tgz $ZIMBRA_BACKUP_DIR
        cd $ZIMBRA_BACKUP_DIR
        rm -rf $ZIMBRA_BACKUP_DIR/$domain

    done
}

# Option
# zmbackup [-ah] [-u mailbox] [-o path] 
while getopts aho:u: OPTION; do
    case $OPTION in
        a )
            AFLAG=1
            ;;
        h )
            usage
            ;;
        o )
            if [[ -z $OPTARG ]]; then
                echo "-o option must specific path"
                exit 1
            else
                ZIMBRA_BACKUP_DIR=$OPTARG
            fi
            ;;
        u ) 
            if [[ -z $OPTARG ]]; then
                echo "-u option must specific mailbox"
            else
                UFLAG=$OPTARG
            fi
            ;;
    esac
done

# if not specific -a or -u it error and exit the script
if [[ -z $UFLAG ]] && [[ $AFLAG -ne 1 ]]; then
    echo "you must specific -a or -u option"
    exit 1
fi

# if UFLAG has value but AFLAG is used
if [[ ! -z $UFLAG ]] && [[ $AFLAG -eq 1 ]]; then
    echo "use -a or -u"
    exit 1
# if declare UFLAG
elif [ ! -z $UFLAG ]; then
    create_backup $UFLAG
fi

# if AFLAG on
if [[ $AFLAG -eq 1 ]]; then
    echo "option a is set"
    create_pack_backup
fi

